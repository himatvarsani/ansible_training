{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red22\green21\blue22;
\red22\green21\blue22;\red70\green137\blue204;\red202\green202\blue202;\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c11373\c10980\c11373;
\cssrgb\c11373\c10980\c11373;\cssrgb\c33725\c61176\c83922;\cssrgb\c83137\c83137\c83137;\cssrgb\c80784\c56863\c47059;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 VPC terraform_automation\
\
1. Open VsCode with the terraform files that you would like to automate\
2. Create a new directory/folder name it .github/workflows in VSCode\
3. create a file named [filename].yml - under the folder \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .github/workflows\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
4. copy the template from - {\field{\*\fldinst{HYPERLINK "https://docs.github.com/en/actions/quickstart"}}{\fldrslt https://docs.github.com/en/actions/quickstart}}\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \strokec6 \

\f2\b Sample Code of GIT Action - YAML File - my_pipeline.yml 
\f1\b0 \
name\strokec7 : \strokec8 Terraform deployment with Github Actions\strokec7 \
\strokec6 on\strokec7 : [\strokec8 push\strokec7 ]\
\strokec6 jobs\strokec7 :\
  \strokec6 terraform-deploy\strokec7 :\
    \strokec6 runs-on\strokec7 : \strokec8 ubuntu-latest\strokec7 \
    \strokec6 steps\strokec7 :\
      - \strokec6 name\strokec7 : \strokec8 AWS authentication\strokec7 \
        \strokec6 uses\strokec7 : \strokec8 aws-actions/configure-aws-credentials@v1\strokec7 \
        \strokec6 with\strokec7 :\
          \strokec6 aws-access-key-id\strokec7 : \strokec8 $\{\{ secrets.AWS_ACCESS_KEY \}\}\strokec7 \
          \strokec6 aws-secret-access-key\strokec7 : \strokec8 $\{\{ secrets.AWS_SECRET_ACCESS_KEY \}\}\strokec7 \
          \strokec6 aws-region\strokec7 : \strokec8 eu-west-1\strokec7 \
      \
      - \strokec6 name\strokec7 : \strokec8 git clone my repo\strokec7 \
        \strokec6 uses\strokec7 : \strokec8 actions/checkout@v2\strokec7 \
        \
      - \strokec6 name\strokec7 : \strokec8 TF ready to go\strokec7 \
        \strokec6 uses\strokec7 : \strokec8 hashicorp/setup-terraform@v1\strokec7 \
        \
      - \strokec6 name\strokec7 : \strokec8 Init our project\strokec7 \
        \strokec6 run\strokec7 : \strokec8 terraform init\strokec7 \
      \
      - \strokec6 name\strokec7 : \strokec8 run a plan\strokec7 \
        \strokec6 run\strokec7 : \strokec8 terraform plan\
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f0 \cf2 \strokec4 AWS Management Console\
IAM --> Users --> Create a temporary user: github-actions\
Provide full access (SELECT):\
- AmazonS3FullAccess\
- AmazonDynomoDBFullAccess\
- AmaxonVPCFullAccess\
- AmaxonLambdaFullAccess\
- IAMFullAccess\
\
Copy the **Access and Security Key** from the security credential tab\
copy the user arn and copy it to the yml file \
\
\
GitHub Action\
Go to your repository ---> Settings --->Secrets\
New repository secret\
Name : AWS_ACCESS_KEY\
\
ACCESS KEY\
Copy the access key from the IAM Management Console\
Paste it under Value: [Access Key]\
[Add Secret]\
\
Name : AWS_SECRET_ACCESS_KEY\
\
SECRET ACCESS KEY\
Copy the access key from the IAM Management Console\
Paste it under Value: [AWS_SECRET_ACCESS_KEY]\
[Add Secret]\
\
.git add .\
git status\
git push\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \strokec7 \
}